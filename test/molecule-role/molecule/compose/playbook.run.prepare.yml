# - name: Create
#   hosts: localhost
#   connection: local
#   gather_facts: false
#   vars:
#     stuff: "{{  lookup('file', lookup('env','CI_PROJECT_DIR') + '/.cache/molecule/molecule-role/compose/instance_config.yml') | from_yaml }}"
#   tasks:
#     - name: Content of stuff
#       debug:
#         var: stuff
#     - include_tasks: ../common/prepare/restore-molecule-cache.yml
#     - name: Populate instance config dict
#       set_fact:
#         instance_conf_dict: {
#           'instance': "{{ stuff[0].instance }}",
#           'address': "{{ stuff[0].address }}",
#           'private_address': "{{ stuff[0].private_address }}",
#           'user': "{{ stuff[0].user }}",
#           'port': "{{ stuff[0].port }}",
#           'identity_file': "{{ stuff[0].identity_file }}",
#           'instance_ids': "{{ stuff[0].instance_ids }}", }
#       register: "instance_config_dict"
#
#     - include_tasks: ../common/prepare/gather-facts.yml

# - name: Create
#   hosts: localhost
#   connection: local
#   gather_facts: true
#   tasks:
#     - include_tasks: ../common/prepare/restore-molecule-cache.yml
#
#     - name: "Gather existing EC2 instances for the branch '{{ agent_current_branch }}'"
#       ec2_instance_info:
#         filters:
#           instance-state-name: [ "running" ]
#           "tag:ci_sts_major_python_version": "{{ ci_sts_major_python_version }}"
#           "tag:agent_current_branch": "{{ agent_current_branch }}"
#           "tag:molecule_scenario_name": "{{ molecule_scenario_name }}"
#           "tag:dev": "{{ dev_mode }}"
#           "tag:usage": "molecule-build"
#       register: ec2_instances
#
#     - name: Content of ec2_instances
#       debug:
#         var: ec2_instances
#       when: ec2_instances is defined
#
#     - name: Populate instance config dict
#       set_fact:
#         instance_conf_dict: {
#           'instance': "{{ item.tags.instance }}",
#           'address': "{{ item.public_ip_address }}",
#           'private_address': "{{ item.private_ip_address }}",
#           'user': "ubuntu",
#           'port': "22",
#           'identity_file': "{{ keypair_path }}",
#           'instance_ids': [ "{{ item.instance_id }}" ], }
#       with_items: "{{ ec2_instances.instances }}"
#       register: "instance_config_dict"
#       when: ec2_instances is defined
#
#     - name: Content of instance_config_dict
#       debug:
#         var: instance_config_dict
#       when: instance_config_dict is defined
#
#     - name: Convert instance config dict to a list
#       set_fact:
#         instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"
#       when: instance_config_dict is defined
#
#     - name: Dump instance config
#       copy:
#         content: "{{ instance_conf | to_json | from_json | molecule_to_yaml | molecule_header }}"
#         dest: "{{ molecule_instance_config }}"
#       when: instance_config_dict is defined
#
#     - include_tasks: ../common/create/wait-for-ssh.yml

- name: Prepare Trace Java
  hosts: trace-java-demo
  gather_facts: true
  tasks:
    - include_tasks: ../common/prepare/docker-compose-cleanup.yml
    - include_tasks: ../common/prepare/run-docker-compose.yml
    - include_tasks: ../common/prepare/wait-for-receiver.yml
    - include_tasks: ../common/prepare/wait-for-agent.yml
