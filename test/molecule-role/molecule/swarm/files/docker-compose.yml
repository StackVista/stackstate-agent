---
version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    deploy:
      placement:
        constraints: [ node.role == manager ]
      resources:
        limits:
          memory: 1G
  kafka:
    depends_on:
      - zookeeper
    extends:
      file: docker-compose.base.yml
      service: kafka
    deploy:
      placement:
        constraints: [ node.role == manager ]
      resources:
        limits:
          memory: 1G

  receiver:
    image: "quay.io/stackstate/stackstate-receiver:${STACKSTATE_BRANCH}"
    ports:
      - 7077:7077
      - 1618:1618
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERS: kafka:9092
    deploy:
      placement:
        constraints: [ node.role == manager ]
      resources:
        limits:
          memory: 1G

  topic-api:
    image: "quay.io/stackstate/stackstate-topic-api:${STACKSTATE_BRANCH}"
    ports:
      - 7070:7070
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERS: kafka:9092
      ZOOKEEPER_QUORUM: kafka
    deploy:
      placement:
        constraints: [ node.role == manager ]
      resources:
        limits:
          memory: 1G

  stackstate-agent:
    image: docker.io/stackstate/stackstate-cluster-agent-test:${AGENT_VERSION}
    deploy:
      placement:
        constraints: [ node.role == manager ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/passwd:/etc/passwd:ro
      - /sys/kernel/debug:/sys/kernel/debug
    environment:
      STS_API_KEY: "API_KEY"
      STS_STS_URL: "http://receiver:7077/stsAgent"
      STS_COLLECT_SWARM_TOPOLOGY: "true"
      STS_LOG_LEVEL: "debug"
      STS_LOG_TO_CONSOLE: "true"
      DOCKER_SWARM: "true"
