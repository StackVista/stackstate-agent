// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/porter/proto/stack_porter.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PorterStatus int32

const (
	PorterStatus_success PorterStatus = 0
	PorterStatus_failure PorterStatus = 1
	PorterStatus_unknown PorterStatus = 2
)

var PorterStatus_name = map[int32]string{
	0: "success",
	1: "failure",
	2: "unknown",
}

var PorterStatus_value = map[string]int32{
	"success": 0,
	"failure": 1,
	"unknown": 2,
}

func (x PorterStatus) String() string {
	return proto.EnumName(PorterStatus_name, int32(x))
}

func (PorterStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bfdc729e97fd87b3, []int{0}
}

type StackInstance struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StackInstance) Reset()         { *m = StackInstance{} }
func (m *StackInstance) String() string { return proto.CompactTextString(m) }
func (*StackInstance) ProtoMessage()    {}
func (*StackInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfdc729e97fd87b3, []int{0}
}

func (m *StackInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackInstance.Unmarshal(m, b)
}
func (m *StackInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackInstance.Marshal(b, m, deterministic)
}
func (m *StackInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackInstance.Merge(m, src)
}
func (m *StackInstance) XXX_Size() int {
	return xxx_messageInfo_StackInstance.Size(m)
}
func (m *StackInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_StackInstance.DiscardUnknown(m)
}

var xxx_messageInfo_StackInstance proto.InternalMessageInfo

func (m *StackInstance) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *StackInstance) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type StackPorterInstance struct {
	PorterID             string         `protobuf:"bytes,1,opt,name=porterID,proto3" json:"porterID,omitempty"`
	Instance             *StackInstance `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StackPorterInstance) Reset()         { *m = StackPorterInstance{} }
func (m *StackPorterInstance) String() string { return proto.CompactTextString(m) }
func (*StackPorterInstance) ProtoMessage()    {}
func (*StackPorterInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfdc729e97fd87b3, []int{1}
}

func (m *StackPorterInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackPorterInstance.Unmarshal(m, b)
}
func (m *StackPorterInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackPorterInstance.Marshal(b, m, deterministic)
}
func (m *StackPorterInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackPorterInstance.Merge(m, src)
}
func (m *StackPorterInstance) XXX_Size() int {
	return xxx_messageInfo_StackPorterInstance.Size(m)
}
func (m *StackPorterInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_StackPorterInstance.DiscardUnknown(m)
}

var xxx_messageInfo_StackPorterInstance proto.InternalMessageInfo

func (m *StackPorterInstance) GetPorterID() string {
	if m != nil {
		return m.PorterID
	}
	return ""
}

func (m *StackPorterInstance) GetInstance() *StackInstance {
	if m != nil {
		return m.Instance
	}
	return nil
}

type StackPorterStatus struct {
	Status               PorterStatus `protobuf:"varint,1,opt,name=status,proto3,enum=PorterStatus" json:"status,omitempty"`
	Message              string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StackPorterStatus) Reset()         { *m = StackPorterStatus{} }
func (m *StackPorterStatus) String() string { return proto.CompactTextString(m) }
func (*StackPorterStatus) ProtoMessage()    {}
func (*StackPorterStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfdc729e97fd87b3, []int{2}
}

func (m *StackPorterStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackPorterStatus.Unmarshal(m, b)
}
func (m *StackPorterStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackPorterStatus.Marshal(b, m, deterministic)
}
func (m *StackPorterStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackPorterStatus.Merge(m, src)
}
func (m *StackPorterStatus) XXX_Size() int {
	return xxx_messageInfo_StackPorterStatus.Size(m)
}
func (m *StackPorterStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_StackPorterStatus.DiscardUnknown(m)
}

var xxx_messageInfo_StackPorterStatus proto.InternalMessageInfo

func (m *StackPorterStatus) GetStatus() PorterStatus {
	if m != nil {
		return m.Status
	}
	return PorterStatus_success
}

func (m *StackPorterStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StackPorterComplete struct {
	PorterID             string               `protobuf:"bytes,1,opt,name=porterID,proto3" json:"porterID,omitempty"`
	Instance             *StackPorterInstance `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Status               *StackPorterStatus   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StackPorterComplete) Reset()         { *m = StackPorterComplete{} }
func (m *StackPorterComplete) String() string { return proto.CompactTextString(m) }
func (*StackPorterComplete) ProtoMessage()    {}
func (*StackPorterComplete) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfdc729e97fd87b3, []int{3}
}

func (m *StackPorterComplete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackPorterComplete.Unmarshal(m, b)
}
func (m *StackPorterComplete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackPorterComplete.Marshal(b, m, deterministic)
}
func (m *StackPorterComplete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackPorterComplete.Merge(m, src)
}
func (m *StackPorterComplete) XXX_Size() int {
	return xxx_messageInfo_StackPorterComplete.Size(m)
}
func (m *StackPorterComplete) XXX_DiscardUnknown() {
	xxx_messageInfo_StackPorterComplete.DiscardUnknown(m)
}

var xxx_messageInfo_StackPorterComplete proto.InternalMessageInfo

func (m *StackPorterComplete) GetPorterID() string {
	if m != nil {
		return m.PorterID
	}
	return ""
}

func (m *StackPorterComplete) GetInstance() *StackPorterInstance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *StackPorterComplete) GetStatus() *StackPorterStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type StackComponent struct {
	ExternalID string     `protobuf:"bytes,1,opt,name=externalID,proto3" json:"externalID,omitempty"`
	Type       *StackType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// json string
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StackComponent) Reset()         { *m = StackComponent{} }
func (m *StackComponent) String() string { return proto.CompactTextString(m) }
func (*StackComponent) ProtoMessage()    {}
func (*StackComponent) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfdc729e97fd87b3, []int{4}
}

func (m *StackComponent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackComponent.Unmarshal(m, b)
}
func (m *StackComponent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackComponent.Marshal(b, m, deterministic)
}
func (m *StackComponent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackComponent.Merge(m, src)
}
func (m *StackComponent) XXX_Size() int {
	return xxx_messageInfo_StackComponent.Size(m)
}
func (m *StackComponent) XXX_DiscardUnknown() {
	xxx_messageInfo_StackComponent.DiscardUnknown(m)
}

var xxx_messageInfo_StackComponent proto.InternalMessageInfo

func (m *StackComponent) GetExternalID() string {
	if m != nil {
		return m.ExternalID
	}
	return ""
}

func (m *StackComponent) GetType() *StackType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *StackComponent) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PushStackComponentRequest struct {
	PorterID             string          `protobuf:"bytes,1,opt,name=porterID,proto3" json:"porterID,omitempty"`
	Instance             *StackInstance  `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Component            *StackComponent `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PushStackComponentRequest) Reset()         { *m = PushStackComponentRequest{} }
func (m *PushStackComponentRequest) String() string { return proto.CompactTextString(m) }
func (*PushStackComponentRequest) ProtoMessage()    {}
func (*PushStackComponentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfdc729e97fd87b3, []int{5}
}

func (m *PushStackComponentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushStackComponentRequest.Unmarshal(m, b)
}
func (m *PushStackComponentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushStackComponentRequest.Marshal(b, m, deterministic)
}
func (m *PushStackComponentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushStackComponentRequest.Merge(m, src)
}
func (m *PushStackComponentRequest) XXX_Size() int {
	return xxx_messageInfo_PushStackComponentRequest.Size(m)
}
func (m *PushStackComponentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushStackComponentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushStackComponentRequest proto.InternalMessageInfo

func (m *PushStackComponentRequest) GetPorterID() string {
	if m != nil {
		return m.PorterID
	}
	return ""
}

func (m *PushStackComponentRequest) GetInstance() *StackInstance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *PushStackComponentRequest) GetComponent() *StackComponent {
	if m != nil {
		return m.Component
	}
	return nil
}

type StackRelation struct {
	ExternalID string     `protobuf:"bytes,1,opt,name=externalID,proto3" json:"externalID,omitempty"`
	SourceID   string     `protobuf:"bytes,2,opt,name=sourceID,proto3" json:"sourceID,omitempty"`
	TargetID   string     `protobuf:"bytes,3,opt,name=targetID,proto3" json:"targetID,omitempty"`
	Type       *StackType `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// json string
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StackRelation) Reset()         { *m = StackRelation{} }
func (m *StackRelation) String() string { return proto.CompactTextString(m) }
func (*StackRelation) ProtoMessage()    {}
func (*StackRelation) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfdc729e97fd87b3, []int{6}
}

func (m *StackRelation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackRelation.Unmarshal(m, b)
}
func (m *StackRelation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackRelation.Marshal(b, m, deterministic)
}
func (m *StackRelation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackRelation.Merge(m, src)
}
func (m *StackRelation) XXX_Size() int {
	return xxx_messageInfo_StackRelation.Size(m)
}
func (m *StackRelation) XXX_DiscardUnknown() {
	xxx_messageInfo_StackRelation.DiscardUnknown(m)
}

var xxx_messageInfo_StackRelation proto.InternalMessageInfo

func (m *StackRelation) GetExternalID() string {
	if m != nil {
		return m.ExternalID
	}
	return ""
}

func (m *StackRelation) GetSourceID() string {
	if m != nil {
		return m.SourceID
	}
	return ""
}

func (m *StackRelation) GetTargetID() string {
	if m != nil {
		return m.TargetID
	}
	return ""
}

func (m *StackRelation) GetType() *StackType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *StackRelation) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PushStackRelationRequest struct {
	PorterID             string         `protobuf:"bytes,1,opt,name=porterID,proto3" json:"porterID,omitempty"`
	Instance             *StackInstance `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Relation             *StackRelation `protobuf:"bytes,3,opt,name=relation,proto3" json:"relation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PushStackRelationRequest) Reset()         { *m = PushStackRelationRequest{} }
func (m *PushStackRelationRequest) String() string { return proto.CompactTextString(m) }
func (*PushStackRelationRequest) ProtoMessage()    {}
func (*PushStackRelationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfdc729e97fd87b3, []int{7}
}

func (m *PushStackRelationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushStackRelationRequest.Unmarshal(m, b)
}
func (m *PushStackRelationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushStackRelationRequest.Marshal(b, m, deterministic)
}
func (m *PushStackRelationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushStackRelationRequest.Merge(m, src)
}
func (m *PushStackRelationRequest) XXX_Size() int {
	return xxx_messageInfo_PushStackRelationRequest.Size(m)
}
func (m *PushStackRelationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushStackRelationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushStackRelationRequest proto.InternalMessageInfo

func (m *PushStackRelationRequest) GetPorterID() string {
	if m != nil {
		return m.PorterID
	}
	return ""
}

func (m *PushStackRelationRequest) GetInstance() *StackInstance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *PushStackRelationRequest) GetRelation() *StackRelation {
	if m != nil {
		return m.Relation
	}
	return nil
}

type StackType struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StackType) Reset()         { *m = StackType{} }
func (m *StackType) String() string { return proto.CompactTextString(m) }
func (*StackType) ProtoMessage()    {}
func (*StackType) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfdc729e97fd87b3, []int{8}
}

func (m *StackType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StackType.Unmarshal(m, b)
}
func (m *StackType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StackType.Marshal(b, m, deterministic)
}
func (m *StackType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StackType.Merge(m, src)
}
func (m *StackType) XXX_Size() int {
	return xxx_messageInfo_StackType.Size(m)
}
func (m *StackType) XXX_DiscardUnknown() {
	xxx_messageInfo_StackType.DiscardUnknown(m)
}

var xxx_messageInfo_StackType proto.InternalMessageInfo

func (m *StackType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("PorterStatus", PorterStatus_name, PorterStatus_value)
	proto.RegisterType((*StackInstance)(nil), "StackInstance")
	proto.RegisterType((*StackPorterInstance)(nil), "StackPorterInstance")
	proto.RegisterType((*StackPorterStatus)(nil), "StackPorterStatus")
	proto.RegisterType((*StackPorterComplete)(nil), "StackPorterComplete")
	proto.RegisterType((*StackComponent)(nil), "StackComponent")
	proto.RegisterType((*PushStackComponentRequest)(nil), "PushStackComponentRequest")
	proto.RegisterType((*StackRelation)(nil), "StackRelation")
	proto.RegisterType((*PushStackRelationRequest)(nil), "PushStackRelationRequest")
	proto.RegisterType((*StackType)(nil), "StackType")
}

func init() {
	proto.RegisterFile("pkg/porter/proto/stack_porter.proto", fileDescriptor_bfdc729e97fd87b3)
}

var fileDescriptor_bfdc729e97fd87b3 = []byte{
	// 550 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xdd, 0x6a, 0x13, 0x41,
	0x14, 0xee, 0xa6, 0xb1, 0x4d, 0x4e, 0x7e, 0x1a, 0x47, 0x2f, 0xd2, 0x5c, 0x54, 0x59, 0x11, 0x24,
	0xd0, 0x8d, 0x44, 0x8a, 0x14, 0x14, 0x51, 0xe3, 0x45, 0xf0, 0xc2, 0xb2, 0x29, 0x5e, 0x08, 0x22,
	0xd3, 0xcd, 0x24, 0x59, 0xb2, 0x99, 0x59, 0x77, 0xce, 0xa2, 0x7d, 0x09, 0x05, 0x6f, 0x7d, 0x22,
	0xdf, 0x4a, 0x66, 0x76, 0x76, 0xb2, 0xdb, 0x26, 0x16, 0xa4, 0x57, 0x7b, 0x7e, 0xbf, 0xf3, 0xcd,
	0xf9, 0x59, 0x78, 0x14, 0x2f, 0xe7, 0x83, 0x58, 0x24, 0xc8, 0x92, 0x41, 0x9c, 0x08, 0x14, 0x03,
	0x89, 0x34, 0x58, 0x7e, 0xc9, 0x4c, 0x9e, 0x36, 0xb9, 0x27, 0xd0, 0x9a, 0x28, 0xeb, 0x98, 0x4b,
	0xa4, 0x3c, 0x60, 0x84, 0x40, 0x15, 0x2f, 0x63, 0xd6, 0x75, 0x1e, 0x3a, 0x4f, 0xea, 0xbe, 0x96,
	0x49, 0x07, 0x76, 0xd3, 0x24, 0xea, 0x56, 0xb4, 0x49, 0x89, 0xee, 0x67, 0xb8, 0xa7, 0xd3, 0xce,
	0x34, 0x96, 0x4d, 0xee, 0x41, 0x2d, 0x43, 0x1f, 0x8f, 0x0c, 0x80, 0xd5, 0x49, 0x1f, 0x6a, 0xa1,
	0x89, 0xd3, 0x48, 0x8d, 0x61, 0xdb, 0x2b, 0x95, 0xf6, 0xad, 0xdf, 0x3d, 0x87, 0xbb, 0x05, 0xf8,
	0x09, 0x52, 0x4c, 0x25, 0x79, 0x0c, 0x7b, 0x52, 0x4b, 0x1a, 0xba, 0x3d, 0x6c, 0x79, 0x45, 0xb7,
	0x6f, 0x9c, 0xa4, 0x0b, 0xfb, 0x2b, 0x26, 0x25, 0x9d, 0x33, 0x43, 0x38, 0x57, 0xdd, 0x9f, 0x4e,
	0x89, 0xf5, 0x5b, 0xb1, 0x8a, 0x23, 0x86, 0xff, 0x66, 0xfd, 0xf4, 0x1a, 0xeb, 0xfb, 0xde, 0x86,
	0x97, 0xaf, 0xb9, 0x93, 0xbe, 0xa5, 0xb9, 0xab, 0xe3, 0x89, 0x77, 0xed, 0x29, 0x39, 0x57, 0x77,
	0x0a, 0x6d, 0xed, 0x54, 0x54, 0x04, 0x67, 0x1c, 0xc9, 0x11, 0x00, 0xfb, 0x8e, 0x2c, 0xe1, 0x34,
	0xb2, 0x6c, 0x0a, 0x16, 0x72, 0x64, 0xc6, 0x93, 0x71, 0x81, 0x0c, 0xfb, 0xfc, 0x32, 0x66, 0x66,
	0x54, 0x04, 0xaa, 0x53, 0x8a, 0x54, 0xd7, 0x6e, 0xfa, 0x5a, 0x76, 0x7f, 0x39, 0x70, 0x78, 0x96,
	0xca, 0x45, 0xb9, 0x94, 0xcf, 0xbe, 0xa6, 0x4c, 0xe2, 0x6d, 0xcd, 0x8c, 0x1c, 0x43, 0x3d, 0xc8,
	0xb1, 0xcd, 0xd3, 0x0f, 0xbc, 0x2b, 0x25, 0xd7, 0x11, 0xee, 0x6f, 0xc7, 0x6c, 0x9e, 0xcf, 0x22,
	0x8a, 0xa1, 0xe0, 0x37, 0x3e, 0xbd, 0x07, 0x35, 0x29, 0xd2, 0x24, 0x60, 0xe3, 0x91, 0x99, 0xac,
	0xd5, 0x95, 0x0f, 0x69, 0x32, 0x67, 0x38, 0x1e, 0xe9, 0xda, 0x75, 0xdf, 0xea, 0xb6, 0x65, 0xd5,
	0x1b, 0x5a, 0x76, 0xa7, 0xd0, 0xb2, 0x1f, 0x0e, 0x74, 0x6d, 0xcb, 0x72, 0x86, 0xb7, 0xdd, 0xb1,
	0x3e, 0xd4, 0x12, 0x03, 0x6d, 0x1a, 0x66, 0x62, 0x6d, 0x41, 0xeb, 0x77, 0x1f, 0x40, 0xdd, 0xf2,
	0x56, 0x8c, 0x39, 0x5d, 0xd9, 0x1b, 0x55, 0x72, 0xff, 0x04, 0x9a, 0xa5, 0x6b, 0x69, 0xc0, 0xbe,
	0x4c, 0x83, 0x80, 0x49, 0xd9, 0xd9, 0x51, 0xca, 0x8c, 0x86, 0x51, 0x9a, 0xb0, 0x8e, 0xa3, 0x94,
	0x94, 0x2f, 0xb9, 0xf8, 0xc6, 0x3b, 0x95, 0xe1, 0x9f, 0x0a, 0x34, 0x0a, 0xfb, 0x49, 0x5e, 0xc2,
	0xc1, 0xfb, 0x30, 0x58, 0x7e, 0x98, 0xcd, 0x26, 0x9c, 0xc6, 0x72, 0x21, 0x90, 0x6c, 0x5c, 0xf8,
	0xde, 0x86, 0xb5, 0x76, 0x77, 0xc8, 0x29, 0x34, 0xde, 0xf1, 0xe9, 0x7f, 0xa5, 0xbe, 0x80, 0x76,
	0x7e, 0x91, 0x86, 0x4b, 0x29, 0x3b, 0xf7, 0x6d, 0xc9, 0x7e, 0x0d, 0x2d, 0x35, 0xaf, 0xf5, 0x21,
	0xf5, 0xbc, 0xad, 0x2b, 0xbf, 0x05, 0xe2, 0x15, 0x34, 0x55, 0x8a, 0xdd, 0xc7, 0x43, 0x6f, 0xdb,
	0x06, 0x6c, 0x06, 0x78, 0x73, 0xfa, 0xe9, 0xf9, 0x3c, 0xc4, 0x45, 0x7a, 0xe1, 0x05, 0x62, 0x35,
	0xd0, 0x11, 0x1f, 0x43, 0x89, 0x34, 0xfb, 0xef, 0xaa, 0x93, 0x67, 0xc7, 0x74, 0xce, 0x38, 0x0e,
	0xae, 0xfe, 0x99, 0x2f, 0xf6, 0xf4, 0xe7, 0xd9, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x50, 0x23,
	0xff, 0xd8, 0xb4, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StackPorterClient is the client API for StackPorter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StackPorterClient interface {
	// istance functions
	KickOffSnapshot(ctx context.Context, in *StackPorterInstance, opts ...grpc.CallOption) (*StackPorterStatus, error)
	EndSnapshot(ctx context.Context, in *StackPorterInstance, opts ...grpc.CallOption) (*StackPorterStatus, error)
	CompletePorter(ctx context.Context, in *StackPorterComplete, opts ...grpc.CallOption) (*StackPorterStatus, error)
	// topology functions
	PushComponent(ctx context.Context, in *PushStackComponentRequest, opts ...grpc.CallOption) (*StackPorterStatus, error)
	PushRelation(ctx context.Context, in *PushStackRelationRequest, opts ...grpc.CallOption) (*StackPorterStatus, error)
}

type stackPorterClient struct {
	cc *grpc.ClientConn
}

func NewStackPorterClient(cc *grpc.ClientConn) StackPorterClient {
	return &stackPorterClient{cc}
}

func (c *stackPorterClient) KickOffSnapshot(ctx context.Context, in *StackPorterInstance, opts ...grpc.CallOption) (*StackPorterStatus, error) {
	out := new(StackPorterStatus)
	err := c.cc.Invoke(ctx, "/StackPorter/KickOffSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stackPorterClient) EndSnapshot(ctx context.Context, in *StackPorterInstance, opts ...grpc.CallOption) (*StackPorterStatus, error) {
	out := new(StackPorterStatus)
	err := c.cc.Invoke(ctx, "/StackPorter/EndSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stackPorterClient) CompletePorter(ctx context.Context, in *StackPorterComplete, opts ...grpc.CallOption) (*StackPorterStatus, error) {
	out := new(StackPorterStatus)
	err := c.cc.Invoke(ctx, "/StackPorter/CompletePorter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stackPorterClient) PushComponent(ctx context.Context, in *PushStackComponentRequest, opts ...grpc.CallOption) (*StackPorterStatus, error) {
	out := new(StackPorterStatus)
	err := c.cc.Invoke(ctx, "/StackPorter/PushComponent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stackPorterClient) PushRelation(ctx context.Context, in *PushStackRelationRequest, opts ...grpc.CallOption) (*StackPorterStatus, error) {
	out := new(StackPorterStatus)
	err := c.cc.Invoke(ctx, "/StackPorter/PushRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StackPorterServer is the server API for StackPorter service.
type StackPorterServer interface {
	// istance functions
	KickOffSnapshot(context.Context, *StackPorterInstance) (*StackPorterStatus, error)
	EndSnapshot(context.Context, *StackPorterInstance) (*StackPorterStatus, error)
	CompletePorter(context.Context, *StackPorterComplete) (*StackPorterStatus, error)
	// topology functions
	PushComponent(context.Context, *PushStackComponentRequest) (*StackPorterStatus, error)
	PushRelation(context.Context, *PushStackRelationRequest) (*StackPorterStatus, error)
}

// UnimplementedStackPorterServer can be embedded to have forward compatible implementations.
type UnimplementedStackPorterServer struct {
}

func (*UnimplementedStackPorterServer) KickOffSnapshot(ctx context.Context, req *StackPorterInstance) (*StackPorterStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KickOffSnapshot not implemented")
}
func (*UnimplementedStackPorterServer) EndSnapshot(ctx context.Context, req *StackPorterInstance) (*StackPorterStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EndSnapshot not implemented")
}
func (*UnimplementedStackPorterServer) CompletePorter(ctx context.Context, req *StackPorterComplete) (*StackPorterStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletePorter not implemented")
}
func (*UnimplementedStackPorterServer) PushComponent(ctx context.Context, req *PushStackComponentRequest) (*StackPorterStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushComponent not implemented")
}
func (*UnimplementedStackPorterServer) PushRelation(ctx context.Context, req *PushStackRelationRequest) (*StackPorterStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushRelation not implemented")
}

func RegisterStackPorterServer(s *grpc.Server, srv StackPorterServer) {
	s.RegisterService(&_StackPorter_serviceDesc, srv)
}

func _StackPorter_KickOffSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StackPorterInstance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StackPorterServer).KickOffSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StackPorter/KickOffSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StackPorterServer).KickOffSnapshot(ctx, req.(*StackPorterInstance))
	}
	return interceptor(ctx, in, info, handler)
}

func _StackPorter_EndSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StackPorterInstance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StackPorterServer).EndSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StackPorter/EndSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StackPorterServer).EndSnapshot(ctx, req.(*StackPorterInstance))
	}
	return interceptor(ctx, in, info, handler)
}

func _StackPorter_CompletePorter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StackPorterComplete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StackPorterServer).CompletePorter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StackPorter/CompletePorter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StackPorterServer).CompletePorter(ctx, req.(*StackPorterComplete))
	}
	return interceptor(ctx, in, info, handler)
}

func _StackPorter_PushComponent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushStackComponentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StackPorterServer).PushComponent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StackPorter/PushComponent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StackPorterServer).PushComponent(ctx, req.(*PushStackComponentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StackPorter_PushRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushStackRelationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StackPorterServer).PushRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/StackPorter/PushRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StackPorterServer).PushRelation(ctx, req.(*PushStackRelationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StackPorter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "StackPorter",
	HandlerType: (*StackPorterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KickOffSnapshot",
			Handler:    _StackPorter_KickOffSnapshot_Handler,
		},
		{
			MethodName: "EndSnapshot",
			Handler:    _StackPorter_EndSnapshot_Handler,
		},
		{
			MethodName: "CompletePorter",
			Handler:    _StackPorter_CompletePorter_Handler,
		},
		{
			MethodName: "PushComponent",
			Handler:    _StackPorter_PushComponent_Handler,
		},
		{
			MethodName: "PushRelation",
			Handler:    _StackPorter_PushRelation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/porter/proto/stack_porter.proto",
}
