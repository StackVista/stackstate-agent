include: '/.gitlab-ci-agent.yml'

image: artifactory.tooling.stackstate.io/docker-virtual/stackstate/stackstate-agent-runner-gitlab:debian-20220505

stages:
  - acceptance_create_infra
  - build_dependencies
  - build
  - build_test
  - pre_release_agent
  - acceptance_tests_general
  - acceptance_tests_receiver
  - acceptance_tests_optional_qa_sts
  - acceptance_cleanup_infra
  - release_agent

# stages:
#   - triggers

variables:
  # Gitlab CI Builers
  BUILDERS_FOLDER: $CI_PROJECT_DIR/.ci-builders
  RUNNER_DEBIAN_BASE: debian-base
  RUNNER_DEBIAN: debian
  RUNNER_DEBIAN_RPM_PUBLISHER: debian-rpmpublisher
  RUNNER_CENTOS6_BASE: centos6-base
  RUNNER_CENTOS7_BASE: centos7-base
  RUNNER_CENTOS7: centos7
  DOCKER_REGISTRY: docker.io
  QUAY_REGISTRY: quay.io
  DOCKER_DRIVER: overlay
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

  # Common Variables
  # The SRC_PATH is in the GOPATH of the builders which
  # currently is /go
  SRC_PATH: /go/src/github.com/StackVista/stackstate-agent
  # Directory in which we execute the omnibus build.
  # For an unknown reason, it does not go well with
  # a ruby dependency if we build directly into $CI_PROJECT_DIR/.omnibus
  OMNIBUS_BASE_DIR: /.omnibus
  OMNIBUS_BASE_DIR_WIN: c:/omnibus-ruby #\$CI_RUNNER_ID
  # Directory in which we execute the omnibus build for SUSE
  # as we want to separate the RPM built for this distro.
  BCC_VERSION: v0.12.0
  SYSTEM_PROBE_GO_VERSION: 1.13.11
  DATADOG_AGENT_EMBEDDED_PATH: /opt/datadog-agent/embedded
  ARCH: amd64
  VCINSTALLDIR: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community"
  MOLECULE_K8S_CLUSTER: eks_test_cluster_1_21
  # This variable represents which one of the gitlab pipelines will contain most of the jobs that's not required for both pipelines to run.
  # IE VMS is a massive jobs and only has to run on either v2 or the v3 pipeline. With this variable you can control on which of the pipelines
  # do jobs like these run on
  PROCESS_AGENT_TEST_REPO: stackstate-process-agent-test
  AGENT_HELM_CHART_VERSION: ""
  STACKSTATE_HELM_CHART_VERSION: ""

  # Agent Variables
  STS_AWS_RELEASE_BUCKET: stackstate-agent-3
  STS_AWS_TEST_BUCKET: stackstate-agent-3-test
  STS_AWS_RELEASE_BUCKET_YUM: stackstate-agent-3-rpm
  STS_AWS_TEST_BUCKET_YUM: stackstate-agent-3-rpm-test
  STS_AWS_RELEASE_BUCKET_WIN: stackstate-agent-3
  STS_AWS_TEST_BUCKET_WIN: stackstate-agent-3-test
  STS_DOCKER_RELEASE_REPO: stackstate-agent
  STS_DOCKER_TEST_REPO: stackstate-agent-test
  STS_DOCKER_RELEASE_REPO_TRACE: stackstate-trace-agent
  STS_DOCKER_TEST_REPO_TRACE: stackstate-trace-agent-test
  STS_DOCKER_RELEASE_REPO_CLUSTER: stackstate-cluster-agent
  STS_DOCKER_TEST_REPO_CLUSTER: stackstate-cluster-agent-test

.rules:
  - &exclude_on_cluster_agent
    if: $CI_COMMIT_MESSAGE =~ /\[cluster-agent]/
    when: never
  - &include_on_cluster_agent
    if: $CI_COMMIT_MESSAGE =~ /\[cluster-agent]/
    when: on_success
  - &scheduled_master_pipeline
    if: $CI_COMMIT_TAG || ($CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE == "schedule")
    when: always

.other_files_rule: &other_files_rule
  # Check if any files (not MD) changed
  # Glob syntax that checks for changes in all files except files that end with .md, .mdown or .markdown extension.
  # (Glob syntax tester: https://toools.cloud/miscellaneous/glob-tester)

  # Run pipeline for merge requests and not for branch pipelines when a commit is pushed
  - if: $CI_MERGE_REQUEST_IID
    changes:
      - "**/{!(*.markdown|*.mdown|*.md),.*}"
    # If any non-MD files changed, always run the pipeline.
    when: always

  # Do not run pipeline for branch commits when there is an open merge request available
  - if: $CI_OPEN_MERGE_REQUESTS && $CI_COMMIT_BRANCH
    when: never

  # Run pipeline for branch commits when no merge requests are available
  - if: $CI_COMMIT_BRANCH || $CI_COMMIT_REF_NAME == "master"
    changes:
      - "**/{!(*.markdown|*.mdown|*.md),.*}"
    # If any non-MD files changed, always run the pipeline.
    when: always

.md_only_rule: &md_only_rule
  # Check if any MD files changed
  # Glob syntax that checks for changes in files ending with .md, .mdown or .markdown extension.
  # (Glob syntax tester: https://toools.cloud/miscellaneous/glob-tester)

  # Run pipeline for merge requests and not for branch pipelines when a commit is pushed
  - if: $CI_MERGE_REQUEST_IID
    changes:
      - "**/*.{markdown,mdown,md}"
    # If only MD files changed, don't run the pipeline.
    when: manual
    # Allow failure must be true, else manual pipelines can never be successful without running the manual jobs.
    allow_failure: true

  # Do not run pipeline for branch commits when there is an open merge request available
  - if: $CI_OPEN_MERGE_REQUESTS && $CI_COMMIT_BRANCH
    when: never

  # Run pipeline for branch commits when no merge requests are available
  - if: $CI_COMMIT_BRANCH || $CI_COMMIT_REF_NAME == "master"
    changes:
      - "**/*.{markdown,mdown,md}"
    # If only MD files changed, don't run the pipeline.
    when: manual
    # Allow failure must be true, else manual pipelines can never be successful without running the manual jobs.
    allow_failure: true

# agent:
#   stage: triggers
#   trigger:
#     include: .gitlab-ci-agent.yml
#     strategy: depend
#   rules:
#     - <<: *exclude_on_cluster_agent
#     - <<: *scheduled_master_pipeline
#     - *other_files_rule
#     - *md_only_rule
#     - when: always

# cluster_agent:
#   stage: triggers
#   variables:
#     <<: *commonvariables
#     <<: *agent_variables
#   trigger:
#     include: .gitlab-ci-cluster-agent.yml
#     strategy: depend
#   rules:
#     - <<: *include_on_cluster_agent
#     - when: never
#
# build_beest_runners:
#   stage: triggers
#   trigger:
#     include: .gitlab-ci-beest.yml
#     strategy: depend
#   rules:
#     - if: $CI_MERGE_REQUEST_IID
#     - if: $CI_OPEN_MERGE_REQUESTS
#       when: never
#     - if: $CI_COMMIT_BRANCH
#
# build_agent_runners:
#   stage: triggers
#   variables:
#     <<: *commonvariables
#   trigger:
#     include: .gitlab-ci-build-runners.yml
#     strategy: depend
#   rules:
#     - if: $CI_MERGE_REQUEST_IID
#     - if: $CI_OPEN_MERGE_REQUESTS
#       when: never
#     - if: $CI_COMMIT_BRANCH
#
