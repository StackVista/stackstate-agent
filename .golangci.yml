run:
  skip-files:
    - pkg/util/cloudproviders/cloudfoundry/bbscache_test.go # implements interface from imported package whose method names fail linting
    - pkg/util/intern/string.go # TODO: fix govet 'unsafeptr' error
    - pkg/serverless/trace/inferredspan/constants.go # TODO: fox revive exported const error
  skip-dirs:
    - pkg/proto/patches


issues:
  exclude-use-default: false
  # Do not limit the number of issues per linter.
  max-issues-per-linter: 0

  # Do not limit the number of times a same issue is reported.
  max-same-issues: 0

  exclude:
    - "Error return value of `io.WriteString` is not checked" # 'errcheck' errors in tools/dep_tree_resolver/go_deps.go
    - "Error return value of `pem.Encode` is not checked" # 'errcheck' errors in test/integration/utils/certificates.go
    - "exported: exported const Exec should have comment \\(or a comment on this block\\) or be unexported" # 'revive' errors in pkg/process/events/model/model_common.go
    - "exported: exported const APIName should have comment \\(or a comment on this block\\) or be unexported" # 'revive' errors in pkg/serverless/trace/inferredspan/constants.go
    - "unnecessary conversion" # 'unconvert' errors in test/integration/utils/certificates_test.go
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print(f|ln)?|os\\.(Un)?Setenv). is not checked"
    - "`eventContext` is unused"
    - "`\\(\\*DatadogLogger\\).changeLogLevel` is unused"
    - "`defaultRetryDuration` is unused" # used by APM and Process
    - "`defaultRetries` is unused"       # used by APM and Process
    - "python._Ctype_char, which can be annoying to use" # ignore warning about returning unexported field from CGO

    # ignore warning on linux about fields used only on windows
    - "`context` is unused"
    - "`id` is unused"
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - errcheck
    # disable typecheck in folder where it breaks because of build tags
    - path: "pkg/security/"
      linters: [typecheck]
    - path: "pkg/process/"
      linters: [typecheck]
    # Ignore name repetition for checks (docker.Docker*, jmx.JMX*, etc.)
    - path: pkg/collector/corechecks/
      text: "name will be used as .* by other packages, and that stutters"
    - path: pkg/util/docker/
      text: "name will be used as .* by other packages, and that stutters"
    - path: pkg/util/containers/cri
      text: "name will be used as .* by other packages, and that stutters"
    - path: pkg/util/containerd
      text: "name will be used as .* by other packages, and that stutters"
    # Should be replaced by google.golang.org/protobuf but is not a drop-in replacement
    - text: "\"github.com/golang/protobuf/proto\" is deprecated"
      linters: [staticcheck]
    # Can't rely on getting the same elements after calling Seed because dependencies could be using
    # it too. Should be replaced by using a local source, but there are too many uses in the repo.
    - text: "rand.Seed has been deprecated since Go 1.20"
      linters: [staticcheck]
    # net.Error.Temporary() isn't properly defined and was thus deprecated.
    # We are using it and it's not clear how to replace it.
    - text: "Temporary has been deprecated since Go 1.18"
      linters: [staticcheck]

linters:
  disable-all: true
  enable:
    - unconvert   # Remove unnecessary type conversions
    - unused      # Checks Go code for unused constants, variables, functions and types
    - ineffassign # Detects when assignments to existing variables are not used
    - misspell    # Finds commonly misspelled English words in comments
    - gofmt       # Gofmt checks whether code was gofmt-ed
    - revive      # Revive is a replacement for golint, a coding style checker
    - errcheck    # errcheck is a program for checking for unchecked errors in go programs.
    - staticcheck # staticcheck is a go vet on steroids, applying a ton of static analysis checks
    - govet       # Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
    - depguard    # Depguard is useful for preventing specific packages from being used
    - bodyclose   # checks whether HTTP response body is closed successfully
    - gosimple    # Linter for Go source code that specializes in simplifying code.

linters-settings:
  depguard:
    rules:
      main:
        files:
          - $all
        deny:
          - pkg: "sync/atomic"
            desc: "Use go.uber.org/atomic instead; see docs/dev/atomics.md"
          - pkg: "io/ioutil"
            desc: "Deprecated since Go 1.16. Use package io or os instead."
          - pkg: "github.com/golang/glog"
            desc: "Crashes Windows nanoserver and significantly delays Agent startup on Windows Domain Controllers."
            # IDE auto-imports often import `gotest.tools/assert` instead of `testify/assert` by default
            # feel free to remove the following line if you really need it in several files as opposed to testify/assert
            # note that if it's just for a single file, you can just add `//nolint:depguard` before the import
            # the goal is just to limit the risk of accidental imports
          - pkg: "gotest.tools/assert"
            desc: "Not really forbidden to use, but it is usually imported by mistake instead of github.com/stretchr/testify/assert"

  errcheck:
    # Disable warnings for `fmt` and `log` packages. Also ignore `Write` functions from `net/http` package.
    ignore: fmt:.*,github.com/StackVista/stackstate-agent/pkg/util/log:.*,net/http:Write,github.com/StackVista/stackstate-agent/pkg/trace/metrics:.*
