---
- name: StackState CLI prepare tasks
  tags: prepare
  block:
    - name: Create stackstate-admin Role
      kubernetes.core.k8s:
        context: "{{ kubecontext }}"
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: Role
          metadata:
            name: stackstate-admin
            namespace: "{{ namespace }}"

    - name: Create CLI ServiceAccount
      kubernetes.core.k8s:
        context: "{{ kubecontext }}"
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            # NOTE: do not change the name, needs to be called this way for now, see https://stackstate.atlassian.net/browse/STAC-15814
            name: stackstate-admin
            namespace: "{{ namespace }}"

    - name: Create CLI RoleBinding
      kubernetes.core.k8s:
        context: "{{ kubecontext }}"
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: RoleBinding
          metadata:
            name: stackstate-admin
            namespace: "{{ namespace }}"
          roleRef:
            name: stackstate-admin
            apiGroup: rbac.authorization.k8s.io
            kind: Role
          subjects:
            - kind: ServiceAccount
              name: stackstate-admin

    - name: Get ServiceAccount object
      kubernetes.core.k8s_info:
        context: "{{ kubecontext }}"
        namespace: "{{ namespace }}"
        kind: ServiceAccount
        name: stackstate-admin
      register: service_account_obj

    - name: service_account_obj
      debug:
        var: service_account_obj.resources[0].secrets[0].name

    - name: Get Secret object
      kubernetes.core.k8s_info:
        context: "{{ kubecontext }}"
        namespace: "{{ namespace }}"
        kind: Secret
        name: "{{ service_account_obj.resources[0].secrets[0].name }}"
      register: secret_obj

    - name: Set a stackstate-admin-token
      ansible.builtin.set_fact:
        stackstate_admin_token: "{{ secret_obj.resources[0].data.token | b64decode }}"

    - name: stackstate-admin token
      debug:
        var: stackstate_admin_token

    # TODO: Once cli v2 supports token_auth we can use the secret associated with the SA, see https://stackstate.atlassian.net/browse/STAC-16951
    # kubectl -n <namespace> get secret stackstate-admin-token-<xyz> -o jsonpath={.data.token} | base64 -d
    #
    # sts context save --url $STS_URL --api-token $STS_API_TOKEN

    - name: Ensure .stackstate directory exists
      file:
        path: "~/.stackstate/cli"
        state: directory
        recurse: yes

    - name: Generate CLI v1 config
      ansible.builtin.template:
        src: sts-cli-v1-config.j2.yml
        dest: "~/.stackstate/cli/conf.yaml"

    # We can only execute simple commands from pytest, pipes cannot be used directly
    - name: Copy stackstate query script
      ansible.builtin.copy:
        src: "sts-query.sh"
        dest: "~/sts-query.sh"
        mode: preserve
