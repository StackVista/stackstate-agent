---
version: '2.4'

services:

  db:
    image: "quay.io/stackstate/trace-java-demo:db-master"
    environment:
      POSTGRES_USER: 'app'
      POSTGRES_PASSWORD: 'app'
      POSTGRES_DB: 'app'
    healthcheck:
      test: ["CMD", "/usr/bin/pg_isready", "--username=app", "--dbname=app"]
      interval: 1s
      timeout: 10s
      retries: 10
    ports:
      - 5432:5432
    labels:
      - "traefik.frontend.rule=Host:stackstate-demo-db"
      - "traefik.backend=stackstate-demo-db"

  mysql:
    image: mysql:5.7
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1

  nagios:
    build: nagios
    ports:
      - 8080:80
    volumes:
      - nagios_logs:/opt/nagios/var/log
      - nagios_conf:/opt/nagios/etc

  nginx:
    image: nginx:1.14.2
    container_name: nginx-1

  stackstate-books-app:
    image: "quay.io/stackstate/trace-java-demo:books-app-master"
    pid: "host"
    ports:
      - '8081-8091:8081'
    labels:
      - "traefik.frontend.rule=Host:stackstate-books-app"
      - "traefik.backend=stackstate-books-app"
    environment:
      MAVEN_OPTS: "-Dsts.service.name=stackstate-books-app -Dauthors-app.traefik.host.header=stackstate-authors-app -Dsts.agent.host=$DOCKER_HOST_IP -Dsts.agent.port=8126 -Dstackstate.slf4j.simpleLogger.defaultLogLevel=debug -javaagent:/sts-java-agent.jar"
    mem_limit: 2G

  stackstate-authors-app:
    image: "quay.io/stackstate/trace-java-demo:authors-app-master"
    pid: "host"
    ports:
      - '8092-8099:8081'
    labels:
      - "traefik.frontend.rule=Host:stackstate-authors-app"
      - "traefik.backend=stackstate-authors-app"
    environment:
      MAVEN_OPTS: "-Dsts.service.name=stackstate-authors-app -Dsts.agent.host=$DOCKER_HOST_IP -Dsts.agent.port=8126 -Dstackstate.slf4j.simpleLogger.defaultLogLevel=debug -javaagent:/sts-java-agent.jar"
    mem_limit: 2G

  traefik:
    image: traefik:v1.7.12
    command: --api --docker --loglevel=INFO --tracing=TRUE --tracing.backend="datadog" --tracing.datadog.debug=TRUE --tracing.datadog.localagenthostport="$DOCKER_HOST_IP:8126" --tracing.datadog.globaltag="source:traefik"  # Enables the web UI and tells Traefik to listen to docker
    ports:
      - 80:80      # The HTTP port
      - 8080:8080  # The Web UI (enabled by --api)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  stackstate-agent:
    image: docker.io/stackstate/${AGENT_DOCKER_REPO}:${AGENT_VERSION}
    network_mode: "host"
    pid: "host"
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /etc/passwd:/etc/passwd:ro
      - /sys/kernel/debug:/sys/kernel/debug
    environment:
      STS_API_KEY: "API_KEY"
      STS_STS_URL: "http://localhost:7077/stsAgent"
      STS_HOSTNAME: "trace-java-demo"
      STS_PROCESS_AGENT_URL: "http://localhost:7077/stsAgent"
      STS_PROCESS_AGENT_ENABLED: "true"
      STS_NETWORK_TRACING_ENABLED: "true"
      STS_PROTOCOL_INSPECTION_ENABLED: "true"
      STS_APM_URL: "http://localhost:7077/stsAgent"
      STS_APM_ENABLED: "true"
      HOST_PROC: "/host/proc"
      HOST_SYS: "/host/sys"
      STS_LOG_LEVEL: "debug"
      STS_LOG_TO_CONSOLE: "true"
      STS_LOG_PAYLOADS: "false"
