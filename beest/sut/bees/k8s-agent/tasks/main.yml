---
- name: StackState Agent prepare tasks
  tags: prepare
  block:
  - name: Create test namespace '{{namespace}}'
    kubernetes.core.k8s:
      context: "{{ kubecontext }}"
      api_version: v1
      kind: Namespace
      name: "{{ namespace }}"
      state: present

  - include_tasks: quay-registry-key.yml

  - name: Add StackState and StackState-test chart repos
    shell: helm repo add stackstate https://helm.stackstate.io && helm repo add stackstate-test https://helm-test.stackstate.io && helm repo update

  - name: Apply manifests for test workloads
    command: kubectl --context={{ kubecontext }} -n={{ namespace }} apply -f {{ role_path }}/files/test_workloads

  - name: Log agent_helm_chart_repo
    debug:
      var: agent_helm_chart_repo

  - name: Helm install StackState Agent
    command: helm upgrade --install \
      --namespace {{namespace}} \
      --create-namespace \
      --set-string 'stackstate.apiKey'='API_KEY' \
      --set-string 'stackstate.cluster.name'='{{cluster_name}}' \
      --set-string 'stackstate.url'='http://{{ groups['receiver'][0] }}:7077/stsAgent' \
      --set "agent.containers.agent.image.tag={{agent_current_branch}}" \
      --set "agent.containers.agent.image.repository=stackstate/{{agent_docker_repo}}" \
      --set "agent.containers.processAgent.image.tag={{process_agent_branch}}" \
      --set "agent.containers.processAgent.image.repository=stackstate/{{process_agent_repo}}" \
      --set "clusterAgent.image.tag={{agent_current_branch}}" \
      --set "clusterAgent.image.repository=stackstate/{{cluster_agent_docker_repo}}" \
      --set "clusterChecks.image.tag={{agent_current_branch}}" \
      --set "clusterChecks.image.repository=stackstate/{{agent_docker_repo}}" \
      --values "{{ role_path }}/files/values.yml" \
      stackstate-cluster-agent {{ agent_helm_chart_repo }}

  - name: Attempt to verify cluster agent ready
    block:
      - name: Wait for the stackstate cluster agent to start doing it's thing
        command: kubectl --context={{ kubecontext }} -n={{ namespace }} wait --all --for=condition=Ready --timeout=360s -l app.kubernetes.io/component=cluster-agent pod
    rescue:
      - name: Describe cluster agent pod
        command: kubectl describe pods -l app.kubernetes.io/component=cluster-agent -n={{ namespace }} --context={{ kubecontext }}
        register: cluster_agent_describe
      - debug:
          var: cluster_agent_describe

      - name: Log cluster agent pod
        command: kubectl logs -l app.kubernetes.io/component=cluster-agent -n={{ namespace }} --context={{ kubecontext }} --all-containers
        register: cluster_agent_logs
      - debug:
          var: cluster_agent_logs

      - debug:
          msg: Cluster agent not ready yet
        failed_when: true

  - name: Attempt to verify node agents ready
    block:
      - name: Wait for the stackstate node agents to start doing their thing (otherwise connections might occur after agent startup)
        command: kubectl --context={{ kubecontext }} -n={{ namespace }} wait --all --for=condition=Ready --timeout=360s -l app.kubernetes.io/component=agent pod
    rescue:
      - name: Describe node agent pods
        command: kubectl describe pods -l app.kubernetes.io/component=agent -n={{ namespace }} --context={{ kubecontext }}
        register: node_agent_describe
      - debug:
          var: node_agent_describe

      - name: Log cluster agent pod
        command: kubectl logs -l app.kubernetes.io/component=agent -n={{ namespace }} --context={{ kubecontext }} --all-containers
        register: node_agent_logs
      - debug:
          var: node_agent_logs

      - debug:
          msg: Node agents not ready yet
        failed_when: true


  - name: Attempt to verify cluster check agent ready
    block:
      - name: Wait for the stackstate cluster check agent to start
        command: kubectl --context={{ kubecontext }} -n={{ namespace }} wait --all --for=condition=Ready --timeout=360s -l app.kubernetes.io/component=clusterchecks pod
    rescue:
      - name: Describe cluster check agent pod
        command: kubectl describe pods -l app.kubernetes.io/component=clusterchecks -n={{ namespace }} --context={{ kubecontext }}
        register: cluster_check_agent_describe
      - debug:
          var: cluster_check_agent_describe

      - name: Log cluster check agent pod
        command: kubectl logs -l app.kubernetes.io/component=clusterchecks -n={{ namespace }} --context={{ kubecontext }} --all-containers
        register: cluster_check_agent_logs
      - debug:
          var: cluster_check_agent_logs
        failed_when: true

  - name: Attempt to verify cluster check agent ready
    block:
      - name: Wait for the kube-state-metrics to be ready
        command: kubectl --context={{ kubecontext }} -n={{ namespace }} wait --all --for=condition=Ready --timeout=360s -l app.kubernetes.io/name=kube-state-metrics pod
    rescue:
      - name: Describe cluster check agent pod
        command: kubectl describe pods -l app.kubernetes.io/name=kube-state-metrics -n={{ namespace }} --context={{ kubecontext }}
        register: kube_state_metrics_describe
      - debug:
          var: kube_state_metrics_describe

      - name: Log cluster check agent pod
        command: kubectl logs -l app.kubernetes.io/name=kube-state-metrics -n={{ namespace }} --context={{ kubecontext }} --all-containers
        register: kube_state_metrics_logs
      - debug:
          var: kube_state_metrics_logs
        failed_when: true

  - include_tasks: pod-connections.yml

  - name: Give the Test Workloads 5 minutes to start performing their actions and some http requests
    pause:
      minutes: 5


## Cleanup

- name: StackState Agent cleanup tasks
  tags: cleanup
  block:
  - name: Uninstall agent
    shell: helm uninstall stackstate-cluster-agent --namespace {{namespace}}

  - name: Delete namespace '{{namespace}}'
    shell: kubectl --context={{ kubecontext }} delete ns {{ namespace }}
