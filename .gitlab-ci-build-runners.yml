stages:
  - build_runner_base
  - build_runners

variables:
  RUNNER7_DEB_BASE: $CI_PROJECT_DIR/.cd-builders/runner7-circle-deb
  RUNNER7_MAIN: $CI_PROJECT_DIR/.cd-builders/runner7-gitlab-deb
  DOCKER_REPOSITORY: quay.io


# produces the base deb image: quay.io/stackstate/stackstate-agent-runner-circle:deb7_{yyyymmdd}
build-deb-base:
  # use ubuntu as the image builder
  image: ubuntu:20.04
  stage: build_runner_base
  script:
    - cd $RUNNER7_DEB_BASE
    # make the image, try running sh, push the tag to quay, write the version as a artifact
    - make build try push version
    - export BASE_RUNNER_IMAGE_VERSION="$(cat $RUNNER7_DEB_BASE/version.txt)"
    - echo Produced deb based container version $BASE_RUNNER_IMAGE_VERSION
  artifacts:
    name: Base deb image version
    paths:
      - $RUNNER7_DEB_BASE/version.txt
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure

#  image: artifactory.stackstate.io/docker-virtual/stackstate/stackstate-agent-runner-gitlab:deb7_{yyyymmdd}
build-main-runner:
  # use ubuntu as the image builder
  image: ubuntu:20.04
  stage: build_runners
  needs: [build-deb-base]
  script:
    - cd RUNNER7_MAIN
    - export BASE_RUNNER_IMAGE_VERSION="$(cat $RUNNER7_DEB_BASE/version.txt)"
    - echo "Using deb base container version: $BASE_RUNNER_IMAGE_VERSION"
    # make the image, try running sh, push the tag to quay, write the version as a artifact
    - make build try push version
    - export MAIN_RUNNER_IMAGE_VERSION=$(cat $RUNNER7_MAIN/version.txt)
    - echo Produced deb container version $MAIN_RUNNER_IMAGE_VERSION
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure

#  image: artifactory.stackstate.io/docker-virtual/stackstate/stackstate-agent-runner-gitlab:centos7_20211004_v7_0

#  image: artifactory.stackstate.io/docker-virtual/stackstate/stackstate-agent-runner-gitlab:centos6_20190429

#  image: artifactory.stackstate.io/docker-virtual/stackstate/stackstate-agent-runner-gitlab:deb-rpmpublisher
